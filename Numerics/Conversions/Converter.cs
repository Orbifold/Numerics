using System;
using System.Globalization;
using System.Linq;

using MassConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.MassUnit, Orbifold.Numerics.MassUnit>, System.Func<double, double>>;
using DistanceConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.DistanceUnit, Orbifold.Numerics.DistanceUnit>, System.Func<double, double>>;
using MultiplierConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.MultiplierPrefix, string>, double>;
using TimeConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.TimeUnit, Orbifold.Numerics.TimeUnit>, System.Func<double, double>>;
using PressureConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.PressureUnit, Orbifold.Numerics.PressureUnit>, System.Func<double, double>>;
using MagnetismConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.MagnetismUnit, Orbifold.Numerics.MagnetismUnit>, System.Func<double, double>>;
using TemperatureConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.TemperatureUnit, Orbifold.Numerics.TemperatureUnit>, System.Func<double, double>>;
using InformationConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.InformationUnit, Orbifold.Numerics.InformationUnit>, System.Func<double, double>>;
using SpeedConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.SpeedUnit, Orbifold.Numerics.SpeedUnit>, System.Func<double, double>>;
using ForceConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.ForceUnit, Orbifold.Numerics.ForceUnit>, System.Func<double, double>>;
using PowerConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.PowerUnit, Orbifold.Numerics.PowerUnit>, System.Func<double, double>>;
using EnergyConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.EnergyUnit, Orbifold.Numerics.EnergyUnit>, System.Func<double, double>>;
using AreaConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.AreaUnit, Orbifold.Numerics.AreaUnit>, System.Func<double, double>>;
using VolumeConversionDictionary = System.Collections.Generic.Dictionary<System.Tuple<Orbifold.Numerics.VolumeUnit, Orbifold.Numerics.VolumeUnit>, System.Func<double, double>>;
using UnitDictionary = System.Collections.Generic.Dictionary<string, object>;
namespace Orbifold.Numerics
{
    public static class Converter
    {
        private static readonly MultiplierConversionDictionary MultiplierLookup;

        private static UnitDictionary AllUnits;
        static Converter()
        {
            AllUnits = new UnitDictionary
                         {
                        {"u", MassUnit.AtomicMassUnit},
                            {"grain", MassUnit.Grain},
                            {"g", MassUnit.Gram},
                            {"uk_ton", MassUnit.ImperialTon},
                            {"uk_cwt", MassUnit.ImperialWeight},
                            {"ozm", MassUnit.Ounce},
                            {"lbm", MassUnit.Pound},
                            {"cwt", MassUnit.ShortWeight},
                            {"sg", MassUnit.Slug},
                            {"stone", MassUnit.Stone},
                            {"ton", MassUnit.Ton},

                            {"ang", DistanceUnit.Angstrom},
                            {"ell", DistanceUnit.Ell},
                            {"ft", DistanceUnit.Foot},
                            {"in", DistanceUnit.Inch},
                            {"ly", DistanceUnit.LightYear},
                            {"m", DistanceUnit.Meter},
                            {"Nmi", DistanceUnit.NauticalMile},
                            {"parsec", DistanceUnit.Parsec},
                            {"pica", DistanceUnit.Pica6},
                            {"Pica", DistanceUnit.Pica72},
                            {"mi", DistanceUnit.StatuteMile},
                            {"survey_mi", DistanceUnit.SurveyMile},
                            {"yd", DistanceUnit.Yard},

                            {"uk_acre", AreaUnit.InternationalAcre},
                            {"us_acre", AreaUnit.USSurveyAcre},
                            {"ang2", AreaUnit.SquareAngstrom},
                            {"ang^2", AreaUnit.SquareAngstrom},
                            {"ar", AreaUnit.Are},
                            {"ft2", AreaUnit.SquareFeet},
                            {"ft^2", AreaUnit.SquareFeet},
                            {"ha", AreaUnit.Hectare},
                            {"in2", AreaUnit.SquareInches},
                            {"in^2", AreaUnit.SquareInches},
                            {"ly2", AreaUnit.SquareLightYear},
                            {"ly^2", AreaUnit.SquareLightYear},
                            {"m2", AreaUnit.SquareMeters},
                            {"m^2", AreaUnit.SquareMeters},
                            {"Morgen", AreaUnit.Morgen},
                            {"mi2", AreaUnit.SquareMiles},
                            {"mi^2", AreaUnit.SquareMiles},
                            {"Nmi2", AreaUnit.SquareNauticalMiles},
                            {"Nmi^2", AreaUnit.SquareNauticalMiles},
                            {"Pica2", AreaUnit.SquarePica},
                            {"Pica^2", AreaUnit.SquarePica},
                            {"Picapt2", AreaUnit.SquarePica},
                            {"Picapt^2", AreaUnit.SquarePica},
                            {"yd2", AreaUnit.SquareYards},
                            {"yd^2", AreaUnit.SquareYards},

                            {"J", EnergyUnit.Joule},
                            {"e", EnergyUnit.Erg},
                            {"c", EnergyUnit.ThermodynamicCalorie},
                            {"cal", EnergyUnit.ITCalorie},
                            {"eV", EnergyUnit.ElectronVolt},
                            {"ev", EnergyUnit.ElectronVolt},
                            {"HPh", EnergyUnit.HorsePowerPerHour},
                            {"hh", EnergyUnit.HorsePowerPerHour},
                            {"Wh", EnergyUnit.WattPerHour},
                            {"wh", EnergyUnit.WattPerHour},
                            {"flb", EnergyUnit.FootPound},
                            {"BTU", EnergyUnit.BTU},
                            {"btu", EnergyUnit.BTU},

                            {"N", ForceUnit.Newton},
                            {"dyn", ForceUnit.Dyne},
                            {"dy", ForceUnit.Dyne},
                            {"lbf", ForceUnit.Pound},
                            {"pond", ForceUnit.Pond},

                            {"HP", PowerUnit.HorsePower},
                            {"h", PowerUnit.HorsePower},
                            {"PS", PowerUnit.PferdeStarke},
                            {"W", PowerUnit.Watt},
                            {"w", PowerUnit.Watt},

                            {"Pa", PressureUnit.Pascal},
                            {"p", PressureUnit.Pascal},
                            {"atm", PressureUnit.Atmosphere},
                            {"at", PressureUnit.Atmosphere},
                            {"mmHg", PressureUnit.Mercury},
                            {"psi", PressureUnit.PSI},
                            {"Torr", PressureUnit.Torr},

                            {"admkn", SpeedUnit.AdmiralityKnot},
                            {"kn", SpeedUnit.Knot},
                            {"m/h", SpeedUnit.MetersPerHour},
                            {"m/hr", SpeedUnit.MetersPerHour},
                            {"m/s", SpeedUnit.MetersPerSecond},
                            {"m/sec", SpeedUnit.MetersPerSecond},
                            {"mph", SpeedUnit.MilesPerHour},

                            {"C", TemperatureUnit.Celsius},
                            {"cel", TemperatureUnit.Celsius},
                            {"F", TemperatureUnit.Fahrenheit},
                            {"fah", TemperatureUnit.Fahrenheit},
                            {"K", TemperatureUnit.Kelvin},
                            {"kel", TemperatureUnit.Kelvin},
                            {"Rank", TemperatureUnit.Rankine},
                            {"Reau", TemperatureUnit.Reaumur},

                            {"yr", TimeUnit.Year},
                            {"d", TimeUnit.Day},
                            {"hr", TimeUnit.Hour},
                            {"min", TimeUnit.Minute},
                            {"sec", TimeUnit.Second},

                            {"tsp", VolumeUnit.Teaspoon},
                            {"tspm", VolumeUnit.ModernTeaspoon},
                            {"tbs", VolumeUnit.TableSpoon},
                            {"oz", VolumeUnit.FluidOunce},
                            {"cup", VolumeUnit.Cup},
                            {"us_pt", VolumeUnit.USPint},
                            {"pt", VolumeUnit.USPint},
                            {"uk_pt", VolumeUnit.UKPint},
                            {"qt", VolumeUnit.Quart},
                            {"uk_qt", VolumeUnit.ImperialQuart},
                            {"gal", VolumeUnit.Gallon},
                            {"uk_gal", VolumeUnit.ImperialGallon},
                            {"lt", VolumeUnit.Liter},
                            {"L", VolumeUnit.Liter},
                            {"l", VolumeUnit.Liter},
                            {"ang3", VolumeUnit.CubicAngstrom},
                            {"ang^3", VolumeUnit.CubicAngstrom},
                            {"barrel", VolumeUnit.USOilBarrel},
                            {"bushel", VolumeUnit.USBushel},
                            {"ft3", VolumeUnit.CubicFeet},
                            {"ft^3", VolumeUnit.CubicFeet},
                            {"in3", VolumeUnit.CubicInch},
                            {"in^3", VolumeUnit.CubicInch},
                            {"ly3", VolumeUnit.CubicLightYear},
                            {"ly^3", VolumeUnit.CubicLightYear},
                            {"m3", VolumeUnit.CubicMeter},
                            {"m^3", VolumeUnit.CubicMeter},
                            {"mi3", VolumeUnit.CubicMile},
                            {"mi^3", VolumeUnit.CubicMile},
                            {"yd3", VolumeUnit.CubicYard},
                            {"yd^3", VolumeUnit.CubicYard},
                            {"Nmi3", VolumeUnit.CubicNauticalMile},
                            {"Nmi^3", VolumeUnit.CubicNauticalMile},
                            {"Pica3", VolumeUnit.CubicPica},
                            {"Pica^3", VolumeUnit.CubicPica},
                            {"Picapt3", VolumeUnit.CubicPica},
                            {"Picapt^3", VolumeUnit.CubicPica},
                            {"GRT", VolumeUnit.GrossRegisteredTon},
                            {"MTON", VolumeUnit.MeasurementTon},
                         };
            MultiplierLookup = new MultiplierConversionDictionary {
                    
                    // standard prefixes
                    { Tuple.Create(MultiplierPrefix.Atto,    "a"), 1E-18 },
                    { Tuple.Create(MultiplierPrefix.Centi,   "c"), 0.01 },
                    { Tuple.Create(MultiplierPrefix.Deci,    "d"), 0.1 },
                    { Tuple.Create(MultiplierPrefix.Dekao,   "da" ), 10 },
                    { Tuple.Create(MultiplierPrefix.Dekao,   "e" ), 10 },
                    { Tuple.Create(MultiplierPrefix.Exa,     "E"), 1E+18 },
                    { Tuple.Create(MultiplierPrefix.Femto,   "f"), 1E-15 },
                    { Tuple.Create(MultiplierPrefix.Giga,    "G"), 1000000000 },
                    { Tuple.Create(MultiplierPrefix.Hecto,   "h"), 100 },
                    { Tuple.Create(MultiplierPrefix.Kilo,    "k"), 1000 },
                    { Tuple.Create(MultiplierPrefix.Mega,    "M"), 1000000 },
                    { Tuple.Create(MultiplierPrefix.Micro,   "u"), 0.000001 },
                    { Tuple.Create(MultiplierPrefix.Milli,   "m"), 0.001 },
                    { Tuple.Create(MultiplierPrefix.Nano,    "n"), 0.000000001 },
                    { Tuple.Create(MultiplierPrefix.Peta,    "P"), 1E+15 },
                    { Tuple.Create(MultiplierPrefix.Pico,    "p"), 1E-12 },
                    { Tuple.Create(MultiplierPrefix.Tera,    "T"), 1E+12 },
                    { Tuple.Create(MultiplierPrefix.Yocto,   "y"), 1E-24 },
                    { Tuple.Create(MultiplierPrefix.Yotta,   "Y"), 1E+24 },
                    { Tuple.Create(MultiplierPrefix.Zepto,   "z"), 1E-21 },
                    { Tuple.Create(MultiplierPrefix.Zetta,   "Z"), 1E+21 },

                    // binary prefixes
                    { Tuple.Create(MultiplierPrefix.Kibi,   "ki"), 1024 },
                    { Tuple.Create(MultiplierPrefix.Mebi,   "Mi"), 1048576 },
                    { Tuple.Create(MultiplierPrefix.Gibi,   "Gi"), 1073741824 },
                    { Tuple.Create(MultiplierPrefix.Tebi,   "Ti"), 1099511627776 },
                    { Tuple.Create(MultiplierPrefix.Pebi,   "Pi"), 1125899906842624 },
                    { Tuple.Create(MultiplierPrefix.Exbi,   "Ei"), 1152921504606846976 },
                    { Tuple.Create(MultiplierPrefix.Zebi,   "Zi"), 1.18059E+21 },
                    { Tuple.Create(MultiplierPrefix.Yobi,   "Yi"), 1.20893E+24 },
                    };
        }

        public static double Convert(double number, string from_unit, string to_unit)
        {
            var fromTuple = GetUnit(from_unit);
            var toTuple = GetUnit(to_unit);

            if (fromTuple.Item2.GetType().Name != toTuple.Item2.GetType().Name) throw new Exception("The supplied types do not belong the same measurement category.");
            var fromMultiplier = MultiplierPrefixValue(fromTuple.Item1);
            var fromEnum = fromTuple.Item2;
            var toMultiplier = MultiplierPrefixValue(toTuple.Item1);
            var toEnum = toTuple.Item2;
            if (fromEnum is AreaUnit) return AreaConverter.Convert(number * fromMultiplier, (AreaUnit)fromEnum, (AreaUnit)toEnum) / toMultiplier;
            if (fromEnum is DistanceUnit) return DistanceConverter.Convert(number * fromMultiplier, (DistanceUnit)fromEnum, (DistanceUnit)toEnum) / toMultiplier;
            if (fromEnum is EnergyUnit) return EnergyConverter.Convert(number * fromMultiplier, (EnergyUnit)fromEnum, (EnergyUnit)toEnum) / toMultiplier;
            if (fromEnum is ForceUnit) return ForceConverter.Convert(number * fromMultiplier, (ForceUnit)fromEnum, (ForceUnit)toEnum) / toMultiplier;
            if (fromEnum is InformationUnit) return InformationConverter.Convert(number * fromMultiplier, (InformationUnit)fromEnum, (InformationUnit)toEnum) / toMultiplier;
            if (fromEnum is MagnetismUnit) return MagnetismConverter.Convert(number * fromMultiplier, (MagnetismUnit)fromEnum, (MagnetismUnit)toEnum) / toMultiplier;
            if (fromEnum is MassUnit) return MassConverter.Convert(number * fromMultiplier, (MassUnit)fromEnum, (MassUnit)toEnum) / toMultiplier;
            if (fromEnum is PowerUnit) return PowerConverter.Convert(number * fromMultiplier, (PowerUnit)fromEnum, (PowerUnit)toEnum) / toMultiplier;
            if (fromEnum is PressureUnit) return PressureConverter.Convert(number * fromMultiplier, (PressureUnit)fromEnum, (PressureUnit)toEnum) / toMultiplier;
            if (fromEnum is SpeedUnit) return SpeedConverter.Convert(number * fromMultiplier, (SpeedUnit)fromEnum, (SpeedUnit)toEnum) / toMultiplier;
            if (fromEnum is TemperatureUnit) return TemperatureConverter.Convert(number * fromMultiplier, (TemperatureUnit)fromEnum, (TemperatureUnit)toEnum) / toMultiplier;
            if (fromEnum is TimeUnit) return TimeConverter.Convert(number * fromMultiplier, (TimeUnit)fromEnum, (TimeUnit)toEnum) / toMultiplier;
            if (fromEnum is VolumeUnit) return VolumeConverter.Convert(number * fromMultiplier, (VolumeUnit)fromEnum, (VolumeUnit)toEnum) / toMultiplier;

            throw new Exception(string.Format("Type '{0}' could not be casted to a known converter.", fromEnum.GetType().Name));
        }



        private static Tuple<MultiplierPrefix, object> GetUnit(string unit)
        {
            const string notsupported = "Unit '{0}' is not supported.";
            MultiplierPrefix? prefix = null;
            object enumer = null;
            // case sensitive search, first exact

            
            if (AllUnits.ContainsKey(unit))
            {
                enumer = AllUnits[unit];
            }
            else
            {
#if SILVERLIGHT
                var entry = AllUnits.Keys.FirstOrDefault(u => unit.EndsWith(u));
#elif PCL
                var entry = AllUnits.Keys.FirstOrDefault(u => unit.EndsWith(u, StringComparison.CurrentCultureIgnoreCase));
#else
                var entry = AllUnits.Keys.FirstOrDefault(u => unit.EndsWith(u, false, CultureInfo.InvariantCulture));
#endif
                if (entry == null) throw new Exception(string.Format(notsupported, unit));
                enumer = AllUnits[entry];
                // there is a multiplier?
                var mult = unit.Substring(0,unit.Length - entry.Length);
                var found = MultiplierLookup.Keys.FirstOrDefault(t => t.Item2 == mult);
                if (found != null) prefix = found.Item1;
                else throw new Exception(string.Format(notsupported, unit));
            }

            return Tuple.Create(prefix.HasValue ? prefix.Value : MultiplierPrefix.None, enumer);
        }


        /// <summary>
        /// Returns the actual multiplier value corresponding to the given multiplier prefix.
        /// </summary>
        /// <param name="prefix">The prefix.</param>
        public static double MultiplierPrefixValue(MultiplierPrefix prefix)
        {
            if (prefix == MultiplierPrefix.None) return 1d;

            // note that there is multiplicity due to Dekao
            return MultiplierLookup.First(v => v.Key.Item1 == prefix).Value;
        }

        /// <summary>
        /// Returns the abbreviation corresponding to the given multiplier prefix.
        /// </summary>
        /// <param name="prefix">The prefix.</param>
        /// <returns></returns>
        public static string MultiplierPrefixAbbreviation(MultiplierPrefix prefix)
        {
            return MultiplierLookup.First(v => v.Key.Item1 == prefix).Key.Item2;
        }

        /// <summary>
        /// Returns the multiplier enumeration value corresponding to the given multiplier abbreviation.
        /// </summary>
        /// <param name="abbreviation">The abbreviation.</param>
        public static MultiplierPrefix MultiplierPrefixOfAbbreviation(string abbreviation)
        {
            if (string.IsNullOrEmpty(abbreviation)) throw new ArgumentNullException("abbreviation");
            var found = MultiplierLookup.Any(v => v.Key.Item2 == abbreviation);
            if (!found) throw new Exception(string.Format("The given abbreviation '{0}' is not supported.", abbreviation));
            return MultiplierLookup.Single(v => v.Key.Item2 == abbreviation).Key.Item1;
        }
    }

    internal sealed class MassConverter
    {
        private static readonly MassConversionDictionary Lookup;
        static MassConverter()
        {
            Lookup = new MassConversionDictionary {
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.AtomicMassUnit), v => v * 1 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Grain), v => v * 2.56260295427809E-23 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Gram), v => v * 1.660538782E-24 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.ImperialTon), v => v * 1.63431310859572E-30 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.ImperialWeight), v => v * 3.26862621719144E-29 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Ounce), v => v * 5.85737818120706E-26 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Pound), v => v * 3.66086136325441E-27 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.ShortWeight), v => v * 3.66086136325441E-29 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Slug), v => v * 1.13783049616326E-28 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Stone), v => v * 2.61490097375315E-28 },
                                                  { Tuple.Create(MassUnit.AtomicMassUnit, MassUnit.Ton), v => v * 1.83043068162721E-30 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.AtomicMassUnit), v => v * 3.90228224130691E+22 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Grain), v => v * 1 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Gram), v => v * 0.06479891 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.ImperialTon), v => v * 6.37755102040816E-08 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.ImperialWeight), v => v * 1.27551020408163E-06 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Ounce), v => v * 2.28571428571429E-03 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Pound), v => v * 1.42857142857143E-04 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.ShortWeight), v => v * 1.42857142857143E-06 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Slug), v => v * 4.44013573879532E-06 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Stone), v => v * 1.02040816326531E-05 },
                                                  { Tuple.Create(MassUnit.Grain, MassUnit.Ton), v => v * 7.14285714285714E-08 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.AtomicMassUnit), v => v * 6.02214179421676E+23 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Grain), v => v * 15.4323583529414 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Gram), v => v * 1 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.ImperialTon), v => v * 9.84206527611061E-07 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.ImperialWeight), v => v * 1.96841305522212E-05 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Ounce), v => v * 3.52739619495804E-02 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Pound), v => v * 2.20462262184878E-03 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.ShortWeight), v => v * 2.20462262184878E-05 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Slug), v => v * 6.85217658567918E-05 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Stone), v => v * 1.5747304441777E-04 },
                                                  { Tuple.Create(MassUnit.Gram, MassUnit.Ton), v => v * 1.10231131092439E-06 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.AtomicMassUnit), v => v * 6.11877855436923E+29 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Grain), v => v * 15680000 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Gram), v => v * 1016046.9088 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.ImperialTon), v => v * 1 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.ImperialWeight), v => v * 20 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Ounce), v => v * 35840 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Pound), v => v * 2240 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.ShortWeight), v => v * 22.4 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Slug), v => v * 69.6213283843107 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Stone), v => v * 160 },
                                                  { Tuple.Create(MassUnit.ImperialTon, MassUnit.Ton), v => v * 1.12 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.AtomicMassUnit), v => v * 3.05938927718461E+28 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Grain), v => v * 784000 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Gram), v => v * 50802.34544 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.ImperialTon), v => v * 0.05 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.ImperialWeight), v => v * 1 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Ounce), v => v * 1792 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Pound), v => v * 112 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.ShortWeight), v => v * 1.12 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Slug), v => v * 3.48106641921553 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Stone), v => v * 8 },
                                                  { Tuple.Create(MassUnit.ImperialWeight, MassUnit.Ton), v => v * 0.056 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.AtomicMassUnit), v => v * 1.70724848057177E+25 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Grain), v => v * 437.5 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Gram), v => v * 28.349523125 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.ImperialTon), v => v * 2.79017857142857E-05 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.ImperialWeight), v => v * 5.58035714285714E-04 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Ounce), v => v * 1 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Pound), v => v * 0.0625 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.ShortWeight), v => v * 0.000625 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Slug), v => v * 1.94255938572295E-03 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Stone), v => v * 4.46428571428571E-03 },
                                                  { Tuple.Create(MassUnit.Ounce, MassUnit.Ton), v => v * 0.00003125 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.AtomicMassUnit), v => v * 2.73159756891483E+26 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Grain), v => v * 7000 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Gram), v => v * 453.59237 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.ImperialTon), v => v * 4.46428571428571E-04 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.ImperialWeight), v => v * 8.92857142857143E-03 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Ounce), v => v * 16 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Pound), v => v * 1 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.ShortWeight), v => v * 0.01 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Slug), v => v * 3.10809501715673E-02 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Stone), v => v * 7.14285714285714E-02 },
                                                  { Tuple.Create(MassUnit.Pound, MassUnit.Ton), v => v * 0.0005 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.AtomicMassUnit), v => v * 2.73159756891483E+28 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Grain), v => v * 700000 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Gram), v => v * 45359.237 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.ImperialTon), v => v * 4.46428571428571E-02 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.ImperialWeight), v => v * 0.892857142857143 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Ounce), v => v * 1600 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Pound), v => v * 100 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.ShortWeight), v => v * 1 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Slug), v => v * 3.10809501715673 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Stone), v => v * 7.14285714285714 },
                                                  { Tuple.Create(MassUnit.ShortWeight, MassUnit.Ton), v => v * 0.05 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.AtomicMassUnit), v => v * 8.78865528188932E+27 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Grain), v => v * 225218.339895013 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Gram), v => v * 14593.9029372064 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.ImperialTon), v => v * 1.43634145341207E-02 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.ImperialWeight), v => v * 0.287268290682415 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Ounce), v => v * 514.784776902887 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Pound), v => v * 32.1740485564304 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.ShortWeight), v => v * 0.321740485564304 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Slug), v => v * 1 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Stone), v => v * 2.29814632545932 },
                                                  { Tuple.Create(MassUnit.Slug, MassUnit.Ton), v => v * 1.60870242782152E-02 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.AtomicMassUnit), v => v * 3.82423659648077E+27 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Grain), v => v * 98000 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Gram), v => v * 6350.29318 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.ImperialTon), v => v * 0.00625 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.ImperialWeight), v => v * 0.125 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Ounce), v => v * 224 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Pound), v => v * 14 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.ShortWeight), v => v * 0.14 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Slug), v => v * 0.435133302401942 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Stone), v => v * 1 },
                                                  { Tuple.Create(MassUnit.Stone, MassUnit.Ton), v => v * 0.007 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.AtomicMassUnit), v => v * 5.46319513782967E+29 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Grain), v => v * 14000000 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Gram), v => v * 907184.74 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.ImperialTon), v => v * 0.892857142857143 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.ImperialWeight), v => v * 17.8571428571429 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Ounce), v => v * 32000 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Pound), v => v * 2000 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.ShortWeight), v => v * 20 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Slug), v => v * 62.1619003431345 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Stone), v => v * 142.857142857143 },
                                                  { Tuple.Create(MassUnit.Ton, MassUnit.Ton), v => v * 1 }
                                              };
        }

        public static double Convert(double number, MassUnit from_unit, MassUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class DistanceConverter
    {
        private static readonly DistanceConversionDictionary Lookup;
        static DistanceConverter()
        {
            Lookup = new DistanceConversionDictionary
            {
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Angstrom), v => v * 1},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Ell), v => v * 8.74890638670166E-11},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Foot), v => v * 3.28083989501312E-10},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Inch), v => v * 3.93700787401575E-09},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.LightYear), v => v * 1.05700083402462E-26},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Meter), v => v * 0.0000000001},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.NauticalMile), v => v * 5.39956803455724E-14},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Parsec), v => v * 3.24077928966473E-27},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Pica6), v => v * 2.36220472440945E-08},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Pica72), v => v * 2.83464566929134E-07},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.StatuteMile), v => v * 6.21371192237334E-14},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.SurveyMile), v => v * 6.21369949494949E-14},
                    {Tuple.Create(DistanceUnit.Angstrom,DistanceUnit.Yard), v => v * 1.09361329833771E-10},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Angstrom), v => v * 11430000000},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Ell), v => v * 1},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Foot), v => v * 3.75},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Inch), v => v * 45},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.LightYear), v => v * 1.20815195329014E-16},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Meter), v => v * 1.143},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.NauticalMile), v => v * 6.17170626349892E-04},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Parsec), v => v * 3.70421072808678E-17},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Pica6), v => v * 270},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Pica72), v => v * 3240},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.StatuteMile), v => v * 7.10227272727273E-04},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.SurveyMile), v => v * 7.10225852272727E-04},
                    {Tuple.Create(DistanceUnit.Ell,DistanceUnit.Yard), v => v * 1.25},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Angstrom), v => v * 3048000000},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Ell), v => v * 0.266666666666667},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Foot), v => v * 1},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Inch), v => v * 12},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.LightYear), v => v * 3.22173854210703E-17},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Meter), v => v * 0.3048},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.NauticalMile), v => v * 1.64578833693305E-04},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Parsec), v => v * 9.87789527489808E-18},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Pica6), v => v * 72},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Pica72), v => v * 864},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.StatuteMile), v => v * 1.89393939393939E-04},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.SurveyMile), v => v * 1.89393560606061E-04},
                    {Tuple.Create(DistanceUnit.Foot,DistanceUnit.Yard), v => v * 0.333333333333333},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Angstrom), v => v * 254000000},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Ell), v => v * 2.22222222222222E-02},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Foot), v => v * 8.33333333333333E-02},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Inch), v => v * 1},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.LightYear), v => v * 2.68478211842252E-18},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Meter), v => v * 0.0254},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.NauticalMile), v => v * 1.37149028077754E-05},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Parsec), v => v * 8.2315793957484E-19},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Pica6), v => v * 6},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Pica72), v => v * 72},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.StatuteMile), v => v * 1.57828282828283E-05},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.SurveyMile), v => v * 1.57827967171717E-05},
                    {Tuple.Create(DistanceUnit.Inch,DistanceUnit.Yard), v => v * 2.77777777777778E-02},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Angstrom), v => v * 9.4607304725808E+25},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Ell), v => v * 8.27710452544252E+15},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Foot), v => v * 3.10391419704095E+16},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Inch), v => v * 3.72469703644913E+17},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.LightYear), v => v * 1},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Meter), v => v * 9.4607304725808E+15},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.NauticalMile), v => v * 5108385784330.89},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Parsec), v => v * 0.306601393806398},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Pica6), v => v * 2.23481822186948E+18},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Pica72), v => v * 2.68178186624338E+19},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.StatuteMile), v => v * 5878625373183.61},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.SurveyMile), v => v * 5878613615932.86},
                    {Tuple.Create(DistanceUnit.LightYear,DistanceUnit.Yard), v => v * 1.03463806568032E+16},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Angstrom), v => v * 10000000000},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Ell), v => v * 0.874890638670166},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Foot), v => v * 3.28083989501312},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Inch), v => v * 39.3700787401575},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.LightYear), v => v * 1.05700083402462E-16},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Meter), v => v * 1},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.NauticalMile), v => v * 5.39956803455724E-04},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Parsec), v => v * 3.24077928966473E-17},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Pica6), v => v * 236.220472440945},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Pica72), v => v * 2834.64566929134},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.StatuteMile), v => v * 6.21371192237334E-04},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.SurveyMile), v => v * 6.2136994949495E-04},
                    {Tuple.Create(DistanceUnit.Meter,DistanceUnit.Yard), v => v * 1.09361329833771},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Angstrom), v => v * 18520000000000},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Ell), v => v * 1620.29746281715},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Foot), v => v * 6076.1154855643},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Inch), v => v * 72913.3858267717},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.LightYear), v => v * 1.95756554461359E-13},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Meter), v => v * 1852},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.NauticalMile), v => v * 1},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Parsec), v => v * 6.00192324445907E-14},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Pica6), v => v * 437480.31496063},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Pica72), v => v * 5249763.77952756},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.StatuteMile), v => v * 1.15077944802354},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.SurveyMile), v => v * 1.15077714646465},
                    {Tuple.Create(DistanceUnit.NauticalMile,DistanceUnit.Yard), v => v * 2025.37182852143},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Angstrom), v => v * 3.08567758128155E+26},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Ell), v => v * 2.69963042981763E+16},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Foot), v => v * 1.01236141118161E+17},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Inch), v => v * 1.21483369341793E+18},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.LightYear), v => v * 3.26156377694566},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Meter), v => v * 3.08567758128155E+16},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.NauticalMile), v => v * 16661326032837.8},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Parsec), v => v * 1},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Pica6), v => v * 7.28900216050761E+18},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Pica72), v => v * 8.74680259260913E+19},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.StatuteMile), v => v * 19173511575409.3},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.SurveyMile), v => v * 19173473228386.2},
                    {Tuple.Create(DistanceUnit.Parsec,DistanceUnit.Yard), v => v * 3.37453803727204E+16},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Angstrom), v => v * 42333333.3333333},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Ell), v => v * 3.7037037037037E-03},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Foot), v => v * 1.38888888888889E-02},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Inch), v => v * 0.166666666666667},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.LightYear), v => v * 4.47463686403754E-19},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Meter), v => v * 4.23333333333333E-03},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.NauticalMile), v => v * 2.28581713462923E-06},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Parsec), v => v * 1.3719298992914E-19},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Pica6), v => v * 1},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Pica72), v => v * 12},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.StatuteMile), v => v * 2.63047138047138E-06},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.SurveyMile), v => v * 2.63046611952862E-06},
                    {Tuple.Create(DistanceUnit.Pica6,DistanceUnit.Yard), v => v * 4.62962962962963E-03},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Angstrom), v => v * 3527777.77777778},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Ell), v => v * 3.08641975308642E-04},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Foot), v => v * 1.15740740740741E-03},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Inch), v => v * 1.38888888888889E-02},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.LightYear), v => v * 3.72886405336462E-20},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Meter), v => v * 3.52777777777778E-04},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.NauticalMile), v => v * 1.90484761219102E-07},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Parsec), v => v * 1.14327491607617E-20},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Pica6), v => v * 8.33333333333333E-02},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Pica72), v => v * 1},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.StatuteMile), v => v * 2.19205948372615E-07},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.SurveyMile), v => v * 2.19205509960718E-07},
                    {Tuple.Create(DistanceUnit.Pica72,DistanceUnit.Yard), v => v * 3.85802469135803E-04},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Angstrom), v => v * 16093440000000},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Ell), v => v * 1408},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Foot), v => v * 5280},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Inch), v => v * 63360},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.LightYear), v => v * 1.70107795023251E-13},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Meter), v => v * 1609.344},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.NauticalMile), v => v * 0.868976241900648},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Parsec), v => v * 5.21552870514619E-14},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Pica6), v => v * 380160},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Pica72), v => v * 4561920},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.StatuteMile), v => v * 1},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.SurveyMile), v => v * 0.999998},
                    {Tuple.Create(DistanceUnit.StatuteMile,DistanceUnit.Yard), v => v * 1760},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Angstrom), v => v * 16093472186944.4},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Ell), v => v * 1408.00281600563},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Foot), v => v * 5280.01056002112},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Inch), v => v * 63360.1267202534},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.LightYear), v => v * 1.70108135239522E-13},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Meter), v => v * 1609.34721869444},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.NauticalMile), v => v * 0.868977979856608},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Parsec), v => v * 5.21553913622446E-14},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Pica6), v => v * 380160.760321521},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Pica72), v => v * 4561929.12385825},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.StatuteMile), v => v * 1.000002000004},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.SurveyMile), v => v * 1},
                    {Tuple.Create(DistanceUnit.SurveyMile,DistanceUnit.Yard), v => v * 1760.00352000704},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Angstrom), v => v * 9144000000},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Ell), v => v * 0.8},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Foot), v => v * 3},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Inch), v => v * 36},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.LightYear), v => v * 9.66521562632108E-17},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Meter), v => v * 0.9144},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.NauticalMile), v => v * 4.93736501079914E-04},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Parsec), v => v * 2.96336858246942E-17},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Pica6), v => v * 216},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Pica72), v => v * 2592},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.StatuteMile), v => v * 5.68181818181818E-04},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.SurveyMile), v => v * 5.68180681818182E-04},
                    {Tuple.Create(DistanceUnit.Yard,DistanceUnit.Yard), v => v * 1},


                                              };
        }

        public static double Convert(double number, DistanceUnit from_unit, DistanceUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class TimeConverter
    {
        private static readonly TimeConversionDictionary Lookup;
        static TimeConverter()
        {
            Lookup = new TimeConversionDictionary {
                {Tuple.Create(TimeUnit.Year,TimeUnit.Year), v => v * 1},
                {Tuple.Create(TimeUnit.Year,TimeUnit.Day), v => v * 365.25},
                {Tuple.Create(TimeUnit.Year,TimeUnit.Hour), v => v * 8766},
                {Tuple.Create(TimeUnit.Year,TimeUnit.Minute), v => v * 525960},
                {Tuple.Create(TimeUnit.Year,TimeUnit.Second), v => v * 31557600},
                {Tuple.Create(TimeUnit.Day,TimeUnit.Year), v => v * 2.7378507871321E-03},
                {Tuple.Create(TimeUnit.Day,TimeUnit.Day), v => v * 1},
                {Tuple.Create(TimeUnit.Day,TimeUnit.Hour), v => v * 24},
                {Tuple.Create(TimeUnit.Day,TimeUnit.Minute), v => v * 1440},
                {Tuple.Create(TimeUnit.Day,TimeUnit.Second), v => v * 86400},
                {Tuple.Create(TimeUnit.Hour,TimeUnit.Year), v => v * 1.14077116130504E-04},
                {Tuple.Create(TimeUnit.Hour,TimeUnit.Day), v => v * 4.16666666666667E-02},
                {Tuple.Create(TimeUnit.Hour,TimeUnit.Hour), v => v * 1},
                {Tuple.Create(TimeUnit.Hour,TimeUnit.Minute), v => v * 60},
                {Tuple.Create(TimeUnit.Hour,TimeUnit.Second), v => v * 3600},
                {Tuple.Create(TimeUnit.Minute,TimeUnit.Year), v => v * 1.90128526884174E-06},
                {Tuple.Create(TimeUnit.Minute,TimeUnit.Day), v => v * 6.94444444444444E-04},
                {Tuple.Create(TimeUnit.Minute,TimeUnit.Hour), v => v * 1.66666666666667E-02},
                {Tuple.Create(TimeUnit.Minute,TimeUnit.Minute), v => v * 1},
                {Tuple.Create(TimeUnit.Minute,TimeUnit.Second), v => v * 60},
                {Tuple.Create(TimeUnit.Second,TimeUnit.Year), v => v * 3.16880878140289E-08},
                {Tuple.Create(TimeUnit.Second,TimeUnit.Day), v => v * 1.15740740740741E-05},
                {Tuple.Create(TimeUnit.Second,TimeUnit.Hour), v => v * 2.77777777777778E-04},
                {Tuple.Create(TimeUnit.Second,TimeUnit.Minute), v => v * 1.66666666666667E-02},
                {Tuple.Create(TimeUnit.Second,TimeUnit.Second), v => v * 1}
                                                  };
        }
        public static double Convert(double number, TimeUnit from_unit, TimeUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class PressureConverter
    {
        private static readonly PressureConversionDictionary Lookup;
        static PressureConverter()
        {
            Lookup = new PressureConversionDictionary {
                    {Tuple.Create(PressureUnit.Pascal,PressureUnit.Pascal), v => v * 1},
                    {Tuple.Create(PressureUnit.Pascal,PressureUnit.Atmosphere), v => v * 9.86923266716013E-06},
                    {Tuple.Create(PressureUnit.Pascal,PressureUnit.Mercury), v => v * 7.50063755419211E-03},
                    {Tuple.Create(PressureUnit.Pascal,PressureUnit.PSI), v => v * 1.45037737730209E-04},
                    {Tuple.Create(PressureUnit.Pascal,PressureUnit.Torr), v => v * 7.5006168270417E-03},
                    {Tuple.Create(PressureUnit.Atmosphere,PressureUnit.Pascal), v => v * 101325},
                    {Tuple.Create(PressureUnit.Atmosphere,PressureUnit.Atmosphere), v => v * 1},
                    {Tuple.Create(PressureUnit.Atmosphere,PressureUnit.Mercury), v => v * 760.002100178515},
                    {Tuple.Create(PressureUnit.Atmosphere,PressureUnit.PSI), v => v * 14.6959487755134},
                    {Tuple.Create(PressureUnit.Atmosphere,PressureUnit.Torr), v => v * 760},
                    {Tuple.Create(PressureUnit.Mercury,PressureUnit.Pascal), v => v * 133.322},
                    {Tuple.Create(PressureUnit.Mercury,PressureUnit.Atmosphere), v => v * 1.31578583765112E-03},
                    {Tuple.Create(PressureUnit.Mercury,PressureUnit.Mercury), v => v * 1},
                    {Tuple.Create(PressureUnit.Mercury,PressureUnit.PSI), v => v * 0.019336721269667},
                    {Tuple.Create(PressureUnit.Mercury,PressureUnit.Torr), v => v * 0.999997236614853},
                    {Tuple.Create(PressureUnit.PSI,PressureUnit.Pascal), v => v * 6894.75729316836},
                    {Tuple.Create(PressureUnit.PSI,PressureUnit.Atmosphere), v => v * 6.80459639098777E-02},
                    {Tuple.Create(PressureUnit.PSI,PressureUnit.Mercury), v => v * 51.7150754801785},
                    {Tuple.Create(PressureUnit.PSI,PressureUnit.PSI), v => v * 1},
                    {Tuple.Create(PressureUnit.PSI,PressureUnit.Torr), v => v * 51.7149325715071},
                    {Tuple.Create(PressureUnit.Torr,PressureUnit.Pascal), v => v * 133.322368421053},
                    {Tuple.Create(PressureUnit.Torr,PressureUnit.Atmosphere), v => v * 1.31578947368421E-03},
                    {Tuple.Create(PressureUnit.Torr,PressureUnit.Mercury), v => v * 1.00000276339278},
                    {Tuple.Create(PressureUnit.Torr,PressureUnit.PSI), v => v * 0.019336774704623},
                    {Tuple.Create(PressureUnit.Torr,PressureUnit.Torr), v => v * 1},
                                                  };
        }
        public static double Convert(double number, PressureUnit from_unit, PressureUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class MagnetismConverter
    {
        private static readonly MagnetismConversionDictionary Lookup;
        static MagnetismConverter()
        {
            Lookup = new MagnetismConversionDictionary {
                    {Tuple.Create(MagnetismUnit.Gauss,MagnetismUnit.Tesla), v => v * 0.0001},
                    {Tuple.Create(MagnetismUnit.Tesla,MagnetismUnit.Gauss), v => v * 10000},
                                                  };
        }
        public static double Convert(double number, MagnetismUnit from_unit, MagnetismUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class TemperatureConverter
    {
        private static readonly TemperatureConversionDictionary Lookup;
        static TemperatureConverter()
        {
            Lookup = new TemperatureConversionDictionary {
                        {Tuple.Create(TemperatureUnit.Celsius,TemperatureUnit.Celsius), v => v * 1},
                        {Tuple.Create(TemperatureUnit.Celsius,TemperatureUnit.Fahrenheit), v => (v *9/5)+32},
                        {Tuple.Create(TemperatureUnit.Celsius,TemperatureUnit.Kelvin), v => v +273.15},
                        {Tuple.Create(TemperatureUnit.Celsius,TemperatureUnit.Rankine), v => (v +273.15)*9/5},
                        {Tuple.Create(TemperatureUnit.Celsius,TemperatureUnit.Reaumur), v => v * 4/5},
                        {Tuple.Create(TemperatureUnit.Fahrenheit,TemperatureUnit.Celsius), v => (v-32)*5/9 },
                        {Tuple.Create(TemperatureUnit.Fahrenheit,TemperatureUnit.Fahrenheit), v => v * 1},
                        {Tuple.Create(TemperatureUnit.Fahrenheit,TemperatureUnit.Kelvin), v => (v +459.67)*5/9},
                        {Tuple.Create(TemperatureUnit.Fahrenheit,TemperatureUnit.Rankine), v => v +459.67},
                        {Tuple.Create(TemperatureUnit.Fahrenheit,TemperatureUnit.Reaumur), v => (v -32)*4/9 },
                        {Tuple.Create(TemperatureUnit.Kelvin,TemperatureUnit.Celsius), v => v  -273.15},
                        {Tuple.Create(TemperatureUnit.Kelvin,TemperatureUnit.Fahrenheit), v => (v * 9/5)-459.67},
                        {Tuple.Create(TemperatureUnit.Kelvin,TemperatureUnit.Kelvin), v => v * 1},
                        {Tuple.Create(TemperatureUnit.Kelvin,TemperatureUnit.Rankine), v => v*9/5},
                        {Tuple.Create(TemperatureUnit.Kelvin,TemperatureUnit.Reaumur), v => (v -273.15)*4/5 },
                        {Tuple.Create(TemperatureUnit.Rankine,TemperatureUnit.Celsius), v => (v-491.67 )*5/9},
                        {Tuple.Create(TemperatureUnit.Rankine,TemperatureUnit.Fahrenheit), v => v -459.67},
                        {Tuple.Create(TemperatureUnit.Rankine,TemperatureUnit.Kelvin), v => v *5/9},
                        {Tuple.Create(TemperatureUnit.Rankine,TemperatureUnit.Rankine), v => v * 1},
                        {Tuple.Create(TemperatureUnit.Rankine,TemperatureUnit.Reaumur), v => (v -491.67)*4/9 },
                        {Tuple.Create(TemperatureUnit.Reaumur,TemperatureUnit.Celsius), v => v *5/4},
                        {Tuple.Create(TemperatureUnit.Reaumur,TemperatureUnit.Fahrenheit), v => (v * 9/4) +32},
                        {Tuple.Create(TemperatureUnit.Reaumur,TemperatureUnit.Kelvin), v => (v *5/9) + 273.15},
                        {Tuple.Create(TemperatureUnit.Reaumur,TemperatureUnit.Rankine), v => (v * 9/4)+491.67},
                        {Tuple.Create(TemperatureUnit.Reaumur,TemperatureUnit.Reaumur), v => v * 1},
                                                  };
        }
        public static double Convert(double number, TemperatureUnit from_unit, TemperatureUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class InformationConverter
    {
        private static readonly InformationConversionDictionary Lookup;
        static InformationConverter()
        {
            Lookup = new InformationConversionDictionary {
                        {Tuple.Create(InformationUnit.Bit,InformationUnit.Byte  ), v => v *0.125},
                        {Tuple.Create(InformationUnit.Byte,InformationUnit.Bit  ), v => v * 8},
                                                  };
        }
        public static double Convert(double number, InformationUnit from_unit, InformationUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class SpeedConverter
    {
        private static readonly SpeedConversionDictionary Lookup;
        static SpeedConverter()
        {
            Lookup = new SpeedConversionDictionary {
                    {Tuple.Create(SpeedUnit.AdmiralityKnot,SpeedUnit.AdmiralityKnot), v => v * 1},
                    {Tuple.Create(SpeedUnit.AdmiralityKnot,SpeedUnit.Knot), v => v * 1.00063930885529},
                    {Tuple.Create(SpeedUnit.AdmiralityKnot,SpeedUnit.MetersPerHour), v => v * 1853.184},
                    {Tuple.Create(SpeedUnit.AdmiralityKnot,SpeedUnit.MetersPerSecond), v => v * 0.514773333333333},
                    {Tuple.Create(SpeedUnit.AdmiralityKnot,SpeedUnit.MilesPerHour), v => v * 1.15151515151515},
                    {Tuple.Create(SpeedUnit.Knot,SpeedUnit.AdmiralityKnot), v => v * 0.999361099599392},
                    {Tuple.Create(SpeedUnit.Knot,SpeedUnit.Knot), v => v * 1},
                    {Tuple.Create(SpeedUnit.Knot,SpeedUnit.MetersPerHour), v => v * 1852},
                    {Tuple.Create(SpeedUnit.Knot,SpeedUnit.MetersPerSecond), v => v * 0.514444444444444},
                    {Tuple.Create(SpeedUnit.Knot,SpeedUnit.MilesPerHour), v => v * 1.15077944802354},
                    {Tuple.Create(SpeedUnit.MetersPerHour,SpeedUnit.AdmiralityKnot), v => v * 5.39611824837685E-04},
                    {Tuple.Create(SpeedUnit.MetersPerHour,SpeedUnit.Knot), v => v * 5.39956803455723E-04},
                    {Tuple.Create(SpeedUnit.MetersPerHour,SpeedUnit.MetersPerHour), v => v * 1},
                    {Tuple.Create(SpeedUnit.MetersPerHour,SpeedUnit.MetersPerSecond), v => v * 2.77777777777778E-04},
                    {Tuple.Create(SpeedUnit.MetersPerHour,SpeedUnit.MilesPerHour), v => v * 6.21371192237334E-04},
                    {Tuple.Create(SpeedUnit.MetersPerSecond,SpeedUnit.AdmiralityKnot), v => v * 1.94260256941567},
                    {Tuple.Create(SpeedUnit.MetersPerSecond,SpeedUnit.Knot), v => v * 1.9438444924406},
                    {Tuple.Create(SpeedUnit.MetersPerSecond,SpeedUnit.MetersPerHour), v => v * 3600},
                    {Tuple.Create(SpeedUnit.MetersPerSecond,SpeedUnit.MetersPerSecond), v => v * 1},
                    {Tuple.Create(SpeedUnit.MetersPerSecond,SpeedUnit.MilesPerHour), v => v * 2.2369362920544},
                    {Tuple.Create(SpeedUnit.MilesPerHour,SpeedUnit.AdmiralityKnot), v => v * 0.868421052631579},
                    {Tuple.Create(SpeedUnit.MilesPerHour,SpeedUnit.Knot), v => v * 0.868976241900648},
                    {Tuple.Create(SpeedUnit.MilesPerHour,SpeedUnit.MetersPerHour), v => v * 1609.344},
                    {Tuple.Create(SpeedUnit.MilesPerHour,SpeedUnit.MetersPerSecond), v => v * 0.44704},
                    {Tuple.Create(SpeedUnit.MilesPerHour,SpeedUnit.MilesPerHour), v => v * 1},
                                                  };
        }
        public static double Convert(double number, SpeedUnit from_unit, SpeedUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class ForceConverter
    {
        private static readonly ForceConversionDictionary Lookup;
        static ForceConverter()
        {
            Lookup = new ForceConversionDictionary
            {
                {Tuple.Create(ForceUnit.Newton,ForceUnit.Newton), v => v * 1},
                {Tuple.Create(ForceUnit.Newton,ForceUnit.Dyne), v => v * 100000},
                {Tuple.Create(ForceUnit.Newton,ForceUnit.Pound), v => v * 0.22480894309971},
                {Tuple.Create(ForceUnit.Newton,ForceUnit.Pond), v => v * 101.971621297793},
                {Tuple.Create(ForceUnit.Dyne,ForceUnit.Newton), v => v * 0.00001},
                {Tuple.Create(ForceUnit.Dyne,ForceUnit.Dyne), v => v * 1},
                {Tuple.Create(ForceUnit.Dyne,ForceUnit.Pound), v => v * 2.2480894309971E-06},
                {Tuple.Create(ForceUnit.Dyne,ForceUnit.Pond), v => v * 1.01971621297793E-03},
                {Tuple.Create(ForceUnit.Pound,ForceUnit.Newton), v => v * 4.4482216152605},
                {Tuple.Create(ForceUnit.Pound,ForceUnit.Dyne), v => v * 444822.16152605},
                {Tuple.Create(ForceUnit.Pound,ForceUnit.Pound), v => v * 1},
                {Tuple.Create(ForceUnit.Pound,ForceUnit.Pond), v => v * 453.59237},
                {Tuple.Create(ForceUnit.Pond,ForceUnit.Newton), v => v * 0.00980665},
                {Tuple.Create(ForceUnit.Pond,ForceUnit.Dyne), v => v * 980.665},
                {Tuple.Create(ForceUnit.Pond,ForceUnit.Pound), v => v * 2.20462262184878E-03},
                {Tuple.Create(ForceUnit.Pond,ForceUnit.Pond), v => v * 1},
            };
        }
        public static double Convert(double number, ForceUnit from_unit, ForceUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class PowerConverter
    {
        private static readonly PowerConversionDictionary Lookup;
        static PowerConverter()
        {
            Lookup = new PowerConversionDictionary
            {
                {Tuple.Create(PowerUnit.HorsePower,PowerUnit.HorsePower), v => v * 1},
                {Tuple.Create(PowerUnit.HorsePower,PowerUnit.PferdeStarke), v => v * 1.013869665424},
                {Tuple.Create(PowerUnit.HorsePower,PowerUnit.Watt), v => v * 745.69987158227},
                {Tuple.Create(PowerUnit.PferdeStarke,PowerUnit.HorsePower), v => v * 0.986320070619531},
                {Tuple.Create(PowerUnit.PferdeStarke,PowerUnit.PferdeStarke), v => v * 1},
                {Tuple.Create(PowerUnit.PferdeStarke,PowerUnit.Watt), v => v * 735.49875},
                {Tuple.Create(PowerUnit.Watt,PowerUnit.HorsePower), v => v * 1.34102208959503E-03},
                {Tuple.Create(PowerUnit.Watt,PowerUnit.PferdeStarke), v => v * 1.3596216173039E-03},
                {Tuple.Create(PowerUnit.Watt,PowerUnit.Watt), v => v * 1},
            };
        }
        public static double Convert(double number, PowerUnit from_unit, PowerUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class EnergyConverter
    {
        private static readonly EnergyConversionDictionary Lookup;
        static EnergyConverter()
        {
            Lookup = new EnergyConversionDictionary
            {
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.Joule), v => v * 1},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.Erg), v => v * 10000000},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.ThermodynamicCalorie), v => v * 0.239005736137667},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.ITCalorie), v => v * 0.238845896627496},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.ElectronVolt), v => v * 6.24150964712042E+18},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.HorsePowerPerHour), v => v * 3.72506135998619E-07},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.WattPerHour), v => v * 2.77777777777778E-04},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.FootPound), v => v * 0.737562149277265},
                    {Tuple.Create(EnergyUnit.Joule,EnergyUnit.BTU), v => v * 9.47817120313317E-04},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.Joule), v => v * 0.0000001},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.Erg), v => v * 1},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.ThermodynamicCalorie), v => v * 2.39005736137667E-08},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.ITCalorie), v => v * 2.38845896627496E-08},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.ElectronVolt), v => v * 624150964712.042},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.HorsePowerPerHour), v => v * 3.72506135998619E-14},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.WattPerHour), v => v * 2.77777777777778E-11},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.FootPound), v => v * 7.37562149277265E-08},
                    {Tuple.Create(EnergyUnit.Erg,EnergyUnit.BTU), v => v * 9.47817120313317E-11},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.Joule), v => v * 4.184},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.Erg), v => v * 41840000},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.ThermodynamicCalorie), v => v * 1},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.ITCalorie), v => v * 0.999331231489443},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.ElectronVolt), v => v * 2.61144763635518E+19},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.HorsePowerPerHour), v => v * 1.55856567301822E-06},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.WattPerHour), v => v * 1.16222222222222E-03},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.FootPound), v => v * 3.08596003257608},
                    {Tuple.Create(EnergyUnit.ThermodynamicCalorie,EnergyUnit.BTU), v => v * 3.96566683139092E-03},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.Joule), v => v * 4.1868},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.Erg), v => v * 41868000},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.ThermodynamicCalorie), v => v * 1.00066921606119},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.ITCalorie), v => v * 1},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.ElectronVolt), v => v * 2.61319525905638E+19},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.HorsePowerPerHour), v => v * 1.55960869019902E-06},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.WattPerHour), v => v * 0.001163},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.FootPound), v => v * 3.08802520659405},
                    {Tuple.Create(EnergyUnit.ITCalorie,EnergyUnit.BTU), v => v * 3.9683207193278E-03},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.Joule), v => v * 1.602176487E-19},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.Erg), v => v * 1.602176487E-12},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.ThermodynamicCalorie), v => v * 3.82929370697897E-20},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.ITCalorie), v => v * 3.82673279593007E-20},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.ElectronVolt), v => v * 1},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.HorsePowerPerHour), v => v * 5.96820572360211E-26},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.WattPerHour), v => v * 4.45049024166667E-23},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.FootPound), v => v * 1.18170473327322E-19},
                    {Tuple.Create(EnergyUnit.ElectronVolt,EnergyUnit.BTU), v => v * 1.51857030414205E-22},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.Joule), v => v * 2684519.53769617},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.Erg), v => v * 26845195376961.7},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.ThermodynamicCalorie), v => v * 641615.568283024},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.ITCalorie), v => v * 641186.475995073},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.ElectronVolt), v => v * 1.67554545924139E+25},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.HorsePowerPerHour), v => v * 1},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.WattPerHour), v => v * 745.69987158227},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.FootPound), v => v * 1980000},
                    {Tuple.Create(EnergyUnit.HorsePowerPerHour,EnergyUnit.BTU), v => v * 2544.43357764402},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.Joule), v => v * 3600},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.Erg), v => v * 36000000000},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.ThermodynamicCalorie), v => v * 860.420650095602},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.ITCalorie), v => v * 859.845227858985},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.ElectronVolt), v => v * 2.24694347296335E+22},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.HorsePowerPerHour), v => v * 1.34102208959503E-03},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.WattPerHour), v => v * 1},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.FootPound), v => v * 2655.22373739816},
                    {Tuple.Create(EnergyUnit.WattPerHour,EnergyUnit.BTU), v => v * 3.41214163312794},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.Joule), v => v * 1.3558179483314},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.Erg), v => v * 13558179.483314},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.ThermodynamicCalorie), v => v * 0.324048266809608},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.ITCalorie), v => v * 0.323831553532865},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.ElectronVolt), v => v * 8.46235080424945E+18},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.HorsePowerPerHour), v => v * 5.05050505050505E-07},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.WattPerHour), v => v * 3.76616096758722E-04},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.FootPound), v => v * 1},
                    {Tuple.Create(EnergyUnit.FootPound,EnergyUnit.BTU), v => v * 1.28506746345658E-03},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.Joule), v => v * 1055.05585262},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.Erg), v => v * 10550558526.2},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.ThermodynamicCalorie), v => v * 252.164400721797},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.ITCalorie), v => v * 251.995761111111},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.ElectronVolt), v => v * 6.58514128237859E+21},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.HorsePowerPerHour), v => v * 3.93014778922204E-04},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.WattPerHour), v => v * 0.293071070172222},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.FootPound), v => v * 778.169262265965},
                    {Tuple.Create(EnergyUnit.BTU,EnergyUnit.BTU), v => v * 1},
            };
        }
        public static double Convert(double number, EnergyUnit from_unit, EnergyUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class AreaConverter
    {
        private static readonly AreaConversionDictionary Lookup;
        static AreaConverter()
        {
            Lookup = new AreaConversionDictionary
            {

                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.InternationalAcre), v => v * 1},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.USSurveyAcre), v => v * 0.999996000004},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareAngstrom), v => v * 4.0468564224E+23},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.Are), v => v * 40.468564224},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareFeet), v => v * 43560},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.Hectare), v => v * 0.40468564224},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareInches), v => v * 6272640},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareLightYear), v => v * 4.52135342619881E-29},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareMeters), v => v * 4046.8564224},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.Morgen), v => v * 1.61874256896},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareMiles), v => v * 0.0015625},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareNauticalMiles), v => v * 1.1798745452934E-03},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquarePica), v => v * 32517365760},
                {Tuple.Create(AreaUnit.InternationalAcre,AreaUnit.SquareYards), v => v * 4840},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.InternationalAcre), v => v * 1.000004000012},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.USSurveyAcre), v => v * 1},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareAngstrom), v => v * 4.04687260987425E+23},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.Are), v => v * 40.4687260987425},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareFeet), v => v * 43560.1742405227},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.Hectare), v => v * 0.404687260987425},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareInches), v => v * 6272665.09063527},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareLightYear), v => v * 4.52137151166678E-29},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareMeters), v => v * 4046.87260987425},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.Morgen), v => v * 1.6187490439497},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareMiles), v => v * 1.56250625001875E-03},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareNauticalMiles), v => v * 1.17987926480574E-03},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquarePica), v => v * 32517495829.8533},
                {Tuple.Create(AreaUnit.USSurveyAcre,AreaUnit.SquareYards), v => v * 4840.01936005808},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.InternationalAcre), v => v * 2.47105381467165E-24},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.USSurveyAcre), v => v * 2.47104393046628E-24},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareAngstrom), v => v * 1},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.Are), v => v * 1E-22},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareFeet), v => v * 1.07639104167097E-19},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.Hectare), v => v * 1E-24},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareInches), v => v * 1.5500031000062E-17},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareLightYear), v => v * 1.11725076312873E-52},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareMeters), v => v * 1E-20},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.Morgen), v => v * 4E-24},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareMiles), v => v * 3.86102158542446E-27},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareNauticalMiles), v => v * 2.91553349598123E-27},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquarePica), v => v * 8.03521607043214E-14},
                {Tuple.Create(AreaUnit.SquareAngstrom,AreaUnit.SquareYards), v => v * 1.19599004630108E-20},
                {Tuple.Create(AreaUnit.Are,AreaUnit.InternationalAcre), v => v * 2.47105381467165E-02},
                {Tuple.Create(AreaUnit.Are,AreaUnit.USSurveyAcre), v => v * 2.47104393046628E-02},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareAngstrom), v => v * 1E+22},
                {Tuple.Create(AreaUnit.Are,AreaUnit.Are), v => v * 1},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareFeet), v => v * 1076.39104167097},
                {Tuple.Create(AreaUnit.Are,AreaUnit.Hectare), v => v * 0.01},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareInches), v => v * 155000.31000062},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareLightYear), v => v * 1.11725076312873E-30},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareMeters), v => v * 100},
                {Tuple.Create(AreaUnit.Are,AreaUnit.Morgen), v => v * 0.04},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareMiles), v => v * 3.86102158542446E-05},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareNauticalMiles), v => v * 2.91553349598123E-05},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquarePica), v => v * 803521607.043214},
                {Tuple.Create(AreaUnit.Are,AreaUnit.SquareYards), v => v * 119.599004630108},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.InternationalAcre), v => v * 2.29568411386593E-05},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.USSurveyAcre), v => v * 2.29567493113866E-05},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareAngstrom), v => v * 9.290304E+18},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.Are), v => v * 0.0009290304},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareFeet), v => v * 1},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.Hectare), v => v * 0.000009290304},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareInches), v => v * 144},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareLightYear), v => v * 1.03795992336979E-33},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareMeters), v => v * 0.09290304},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.Morgen), v => v * 0.000037161216},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareMiles), v => v * 3.58700642791552E-08},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareNauticalMiles), v => v * 2.70861924998484E-08},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquarePica), v => v * 746496},
                {Tuple.Create(AreaUnit.SquareFeet,AreaUnit.SquareYards), v => v * 0.111111111111111},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.InternationalAcre), v => v * 2.47105381467165},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.USSurveyAcre), v => v * 2.47104393046628},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareAngstrom), v => v * 1E+24},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.Are), v => v * 100},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareFeet), v => v * 107639.104167097},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.Hectare), v => v * 1},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareInches), v => v * 15500031.000062},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareLightYear), v => v * 1.11725076312873E-28},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareMeters), v => v * 10000},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.Morgen), v => v * 4},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareMiles), v => v * 3.86102158542446E-03},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareNauticalMiles), v => v * 2.91553349598123E-03},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquarePica), v => v * 80352160704.3214},
                {Tuple.Create(AreaUnit.Hectare,AreaUnit.SquareYards), v => v * 11959.9004630108},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.InternationalAcre), v => v * 1.59422507907356E-07},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.USSurveyAcre), v => v * 1.59421870217962E-07},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareAngstrom), v => v * 6.4516E+16},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.Are), v => v * 0.0000064516},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareFeet), v => v * 6.94444444444444E-03},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.Hectare), v => v * 0.000000064516},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareInches), v => v * 1},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareLightYear), v => v * 7.20805502340133E-36},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareMeters), v => v * 0.00064516},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.Morgen), v => v * 0.000000258064},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareMiles), v => v * 2.49097668605244E-10},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareNauticalMiles), v => v * 1.88098559026725E-10},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquarePica), v => v * 5184},
                {Tuple.Create(AreaUnit.SquareInches,AreaUnit.SquareYards), v => v * 7.71604938271605E-04},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.InternationalAcre), v => v * 2.21172712180724E+28},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.USSurveyAcre), v => v * 2.2117182749076E+28},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareAngstrom), v => v * 8.95054210748189E+51},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.Are), v => v * 8.95054210748189E+29},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareFeet), v => v * 9.63428334259233E+32},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.Hectare), v => v * 8.95054210748189E+27},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareInches), v => v * 1.3873368013333E+35},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareLightYear), v => v * 1},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareMeters), v => v * 8.95054210748189E+31},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.Morgen), v => v * 3.58021684299276E+28},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareMiles), v => v * 3.45582362782381E+25},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareNauticalMiles), v => v * 2.60956053215539E+25},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquarePica), v => v * 7.19195397811181E+38},
                {Tuple.Create(AreaUnit.SquareLightYear,AreaUnit.SquareYards), v => v * 1.0704759269547E+32},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.InternationalAcre), v => v * 2.47105381467165E-04},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.USSurveyAcre), v => v * 2.47104393046628E-04},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareAngstrom), v => v * 1E+20},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.Are), v => v * 0.01},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareFeet), v => v * 10.7639104167097},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.Hectare), v => v * 0.0001},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareInches), v => v * 1550.0031000062},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareLightYear), v => v * 1.11725076312873E-32},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareMeters), v => v * 1},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.Morgen), v => v * 0.0004},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareMiles), v => v * 3.86102158542446E-07},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareNauticalMiles), v => v * 2.91553349598123E-07},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquarePica), v => v * 8035216.07043214},
                {Tuple.Create(AreaUnit.SquareMeters,AreaUnit.SquareYards), v => v * 1.19599004630108},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.InternationalAcre), v => v * 0.617763453667913},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.USSurveyAcre), v => v * 0.61776098261657},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareAngstrom), v => v * 2.5E+23},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.Are), v => v * 25},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareFeet), v => v * 26909.7760417743},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.Hectare), v => v * 0.25},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareInches), v => v * 3875007.7500155},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareLightYear), v => v * 2.79312690782183E-29},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareMeters), v => v * 2500},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.Morgen), v => v * 1},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareMiles), v => v * 9.65255396356115E-04},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareNauticalMiles), v => v * 7.28883373995307E-04},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquarePica), v => v * 20088040176.0804},
                {Tuple.Create(AreaUnit.Morgen,AreaUnit.SquareYards), v => v * 2989.9751157527},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.InternationalAcre), v => v * 640},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.USSurveyAcre), v => v * 639.99744000256},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareAngstrom), v => v * 2.589988110336E+26},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.Are), v => v * 25899.88110336},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareFeet), v => v * 27878400},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.Hectare), v => v * 258.9988110336},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareInches), v => v * 4014489600},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareLightYear), v => v * 2.89366619276724E-26},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareMeters), v => v * 2589988.110336},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.Morgen), v => v * 1035.9952441344},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareMiles), v => v * 1},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareNauticalMiles), v => v * 0.755119708987773},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquarePica), v => v * 20811114086400},
                {Tuple.Create(AreaUnit.SquareMiles,AreaUnit.SquareYards), v => v * 3097600},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.InternationalAcre), v => v * 847.547736315756},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.USSurveyAcre), v => v * 847.544346128201},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareAngstrom), v => v * 3.429904E+26},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.Are), v => v * 34299.04},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareFeet), v => v * 36919179.3939143},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.Hectare), v => v * 342.9904},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareInches), v => v * 5316361832.72367},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareLightYear), v => v * 3.83206286145829E-26},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareMeters), v => v * 3429904},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.Morgen), v => v * 1371.9616},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareMiles), v => v * 1.32429333799337},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareNauticalMiles), v => v * 1},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquarePica), v => v * 27560019740839.5},
                {Tuple.Create(AreaUnit.SquareNauticalMiles,AreaUnit.SquareYards), v => v * 4102131.04376826},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.InternationalAcre), v => v * 3.075279859324E-11},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.USSurveyAcre), v => v * 3.07526755821687E-11},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareAngstrom), v => v * 12445216049382.7},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.Are), v => v * 1.24452160493827E-09},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareFeet), v => v * 1.33959190672154E-06},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.Hectare), v => v * 1.24452160493827E-11},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareInches), v => v * 1.92901234567901E-04},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareLightYear), v => v * 1.39044271284748E-39},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareMeters), v => v * 1.24452160493827E-07},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.Morgen), v => v * 4.97808641975309E-11},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareMiles), v => v * 4.80512478019376E-14},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareNauticalMiles), v => v * 3.62844442566985E-14},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquarePica), v => v * 1},
                {Tuple.Create(AreaUnit.SquarePica,AreaUnit.SquareYards), v => v * 1.48843545191282E-07},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.InternationalAcre), v => v * 2.06611570247934E-04},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.USSurveyAcre), v => v * 2.06610743802479E-04},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareAngstrom), v => v * 8.3612736E+19},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.Are), v => v * 0.0083612736},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareFeet), v => v * 9},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.Hectare), v => v * 0.000083612736},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareInches), v => v * 1296},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareLightYear), v => v * 9.34163931032813E-33},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareMeters), v => v * 0.83612736},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.Morgen), v => v * 0.000334450944},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareMiles), v => v * 3.22830578512397E-07},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareNauticalMiles), v => v * 2.43775732498636E-07},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquarePica), v => v * 6718464},
                {Tuple.Create(AreaUnit.SquareYards,AreaUnit.SquareYards), v => v * 1},
            };
        }
        public static double Convert(double number, AreaUnit from_unit, AreaUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

    internal sealed class VolumeConverter
    {
        private static readonly VolumeConversionDictionary Lookup;
        static VolumeConverter()
        {
            Lookup = new VolumeConversionDictionary
            {
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.Teaspoon), v => v * 1},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.ModernTeaspoon), v => v * 0.98578431875},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.TableSpoon), v => v * 0.333333333333333},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.FluidOunce), v => v * 0.166666666666667},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.Cup), v => v * 2.08333333333333E-02},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.USPint), v => v * 1.04166666666667E-02},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.UKPint), v => v * 8.67368942321863E-03},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.Quart), v => v * 5.20833333333333E-03},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.ImperialQuart), v => v * 4.33684471160932E-03},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.Gallon), v => v * 1.30208333333333E-03},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.ImperialGallon), v => v * 1.08421117790233E-03},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.Liter), v => v * 0.00492892159375},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicAngstrom), v => v * 4.92892159375E+24},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.USOilBarrel), v => v * 3.10019841269841E-05},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.USBushel), v => v * 1.39870932189991E-04},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicFeet), v => v * 1.7406322337963E-04},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicInch), v => v * 0.30078125},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicLightYear), v => v * 5.82073596534524E-54},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicMeter), v => v * 4.92892159375E-06},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicMile), v => v * 1.18251117637581E-15},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicYard), v => v * 6.44678605109739E-06},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicNauticalMile), v => v * 7.7594146898722E-16},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.CubicPica), v => v * 112266},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.GrossRegisteredTon), v => v * 1.7406322337963E-06},
            {Tuple.Create(VolumeUnit.Teaspoon,VolumeUnit.MeasurementTon), v => v * 4.35158058449074E-06},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.Teaspoon), v => v * 1.01442068105529},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.ModernTeaspoon), v => v * 1},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.TableSpoon), v => v * 0.33814022701843},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.FluidOunce), v => v * 0.169070113509215},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.Cup), v => v * 2.11337641886519E-02},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.USPint), v => v * 1.05668820943259E-02},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.UKPint), v => v * 8.79876993196351E-03},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.Quart), v => v * 5.28344104716297E-03},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.ImperialQuart), v => v * 4.39938496598176E-03},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.Gallon), v => v * 1.32086026179074E-03},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.ImperialGallon), v => v * 1.09984624149544E-03},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.Liter), v => v * 0.005},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicAngstrom), v => v * 5E+24},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.USOilBarrel), v => v * 3.14490538521605E-05},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.USBushel), v => v * 1.41887966292009E-04},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicFeet), v => v * 1.76573333607443E-04},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicInch), v => v * 0.305118720473661},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicLightYear), v => v * 5.90467494220854E-54},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicMeter), v => v * 0.000005},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicMile), v => v * 1.19956379289464E-15},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicYard), v => v * 6.53975309657196E-06},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicNauticalMile), v => v * 7.87131073429057E-16},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.CubicPica), v => v * 113884.952179353},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.GrossRegisteredTon), v => v * 1.76573333607443E-06},
            {Tuple.Create(VolumeUnit.ModernTeaspoon,VolumeUnit.MeasurementTon), v => v * 4.41433334018607E-06},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.Teaspoon), v => v * 3},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.ModernTeaspoon), v => v * 2.95735295625},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.TableSpoon), v => v * 1},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.FluidOunce), v => v * 0.5},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.Cup), v => v * 0.0625},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.USPint), v => v * 0.03125},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.UKPint), v => v * 2.60210682696559E-02},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.Quart), v => v * 0.015625},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.ImperialQuart), v => v * 1.30105341348279E-02},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.Gallon), v => v * 0.00390625},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.ImperialGallon), v => v * 3.25263353370699E-03},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.Liter), v => v * 0.01478676478125},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicAngstrom), v => v * 1.478676478125E+25},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.USOilBarrel), v => v * 9.30059523809524E-05},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.USBushel), v => v * 4.19612796569972E-04},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicFeet), v => v * 5.22189670138889E-04},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicInch), v => v * 0.90234375},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicLightYear), v => v * 1.74622078960357E-53},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicMeter), v => v * 1.478676478125E-05},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicMile), v => v * 3.54753352912742E-15},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicYard), v => v * 1.93403581532922E-05},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicNauticalMile), v => v * 2.32782440696166E-15},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.CubicPica), v => v * 336798},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.GrossRegisteredTon), v => v * 5.22189670138889E-06},
            {Tuple.Create(VolumeUnit.TableSpoon,VolumeUnit.MeasurementTon), v => v * 1.30547417534722E-05},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.Teaspoon), v => v * 6},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.ModernTeaspoon), v => v * 5.9147059125},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.TableSpoon), v => v * 2},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.FluidOunce), v => v * 1},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.Cup), v => v * 0.125},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.USPint), v => v * 0.0625},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.UKPint), v => v * 5.20421365393118E-02},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.Quart), v => v * 0.03125},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.ImperialQuart), v => v * 2.60210682696559E-02},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.Gallon), v => v * 0.0078125},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.ImperialGallon), v => v * 6.50526706741397E-03},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.Liter), v => v * 0.0295735295625},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicAngstrom), v => v * 2.95735295625E+25},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.USOilBarrel), v => v * 1.86011904761905E-04},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.USBushel), v => v * 8.39225593139945E-04},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicFeet), v => v * 1.04437934027778E-03},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicInch), v => v * 1.8046875},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicLightYear), v => v * 3.49244157920715E-53},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicMeter), v => v * 2.95735295625E-05},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicMile), v => v * 7.09506705825484E-15},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicYard), v => v * 3.86807163065844E-05},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicNauticalMile), v => v * 4.65564881392332E-15},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.CubicPica), v => v * 673596},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.GrossRegisteredTon), v => v * 1.04437934027778E-05},
            {Tuple.Create(VolumeUnit.FluidOunce,VolumeUnit.MeasurementTon), v => v * 2.61094835069444E-05},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.Teaspoon), v => v * 48},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.ModernTeaspoon), v => v * 47.3176473},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.TableSpoon), v => v * 16},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.FluidOunce), v => v * 8},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.Cup), v => v * 1},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.USPint), v => v * 0.5},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.UKPint), v => v * 0.416337092314494},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.Quart), v => v * 0.25},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.ImperialQuart), v => v * 0.208168546157247},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.Gallon), v => v * 0.0625},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.ImperialGallon), v => v * 5.20421365393118E-02},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.Liter), v => v * 0.2365882365},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicAngstrom), v => v * 2.365882365E+26},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.USOilBarrel), v => v * 1.48809523809524E-03},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.USBushel), v => v * 6.71380474511956E-03},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicFeet), v => v * 8.35503472222222E-03},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicInch), v => v * 14.4375},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicLightYear), v => v * 2.79395326336572E-52},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicMeter), v => v * 0.0002365882365},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicMile), v => v * 5.67605364660388E-14},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicYard), v => v * 3.09445730452675E-04},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicNauticalMile), v => v * 3.72451905113865E-14},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.CubicPica), v => v * 5388768},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.GrossRegisteredTon), v => v * 8.35503472222222E-05},
            {Tuple.Create(VolumeUnit.Cup,VolumeUnit.MeasurementTon), v => v * 2.08875868055556E-04},

            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.Teaspoon), v => v * 96},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.ModernTeaspoon), v => v * 94.6352946},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.TableSpoon), v => v * 32},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.FluidOunce), v => v * 16},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.Cup), v => v * 2},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.USPint), v => v * 1},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.UKPint), v => v * 0.832674184628989},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.Quart), v => v * 0.5},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.ImperialQuart), v => v * 0.416337092314494},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.Gallon), v => v * 0.125},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.ImperialGallon), v => v * 0.104084273078624},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.Liter), v => v * 0.473176473},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicAngstrom), v => v * 4.73176473E+26},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.USOilBarrel), v => v * 2.97619047619048E-03},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.USBushel), v => v * 1.34276094902391E-02},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicFeet), v => v * 1.67100694444444E-02},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicInch), v => v * 28.875},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicLightYear), v => v * 5.58790652673143E-52},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicMeter), v => v * 0.000473176473},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicMile), v => v * 1.13521072932078E-13},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicYard), v => v * 6.1889146090535E-04},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicNauticalMile), v => v * 7.44903810227731E-14},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.CubicPica), v => v * 10777536},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.GrossRegisteredTon), v => v * 1.67100694444444E-04},
            {Tuple.Create(VolumeUnit.USPint,VolumeUnit.MeasurementTon), v => v * 4.17751736111111E-04},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.Teaspoon), v => v * 115.291192848466},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.ModernTeaspoon), v => v * 113.65225},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.TableSpoon), v => v * 38.4303976161554},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.FluidOunce), v => v * 19.2151988080777},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.Cup), v => v * 2.40189985100971},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.USPint), v => v * 1.20094992550486},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.UKPint), v => v * 1},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.Quart), v => v * 0.600474962752428},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.ImperialQuart), v => v * 0.5},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.Gallon), v => v * 0.150118740688107},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.ImperialGallon), v => v * 0.125},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.Liter), v => v * 0.56826125},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicAngstrom), v => v * 5.6826125E+26},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.USOilBarrel), v => v * 3.57425573066921E-03},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.USBushel), v => v * 0.016125886617011},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicFeet), v => v * 2.00679566544865E-02},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicInch), v => v * 34.6774290989527},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicLightYear), v => v * 6.71079592700621E-52},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicMeter), v => v * 0.00056826125},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicMile), v => v * 1.3633312408101E-13},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicYard), v => v * 7.43257653869871E-04},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicNauticalMile), v => v * 8.94592175401276E-14},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.CubicPica), v => v * 12943281.0563259},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.GrossRegisteredTon), v => v * 2.00679566544865E-04},
            {Tuple.Create(VolumeUnit.UKPint,VolumeUnit.MeasurementTon), v => v * 5.01698916362163E-04},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.Teaspoon), v => v * 192},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.ModernTeaspoon), v => v * 189.2705892},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.TableSpoon), v => v * 64},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.FluidOunce), v => v * 32},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.Cup), v => v * 4},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.USPint), v => v * 2},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.UKPint), v => v * 1.66534836925798},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.Quart), v => v * 1},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.ImperialQuart), v => v * 0.832674184628989},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.Gallon), v => v * 0.25},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.ImperialGallon), v => v * 0.208168546157247},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.Liter), v => v * 0.946352946},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicAngstrom), v => v * 9.46352946E+26},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.USOilBarrel), v => v * 5.95238095238095E-03},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.USBushel), v => v * 2.68552189804782E-02},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicFeet), v => v * 3.34201388888889E-02},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicInch), v => v * 57.75},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicLightYear), v => v * 1.11758130534629E-51},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicMeter), v => v * 0.000946352946},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicMile), v => v * 2.27042145864155E-13},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicYard), v => v * 1.2377829218107E-03},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicNauticalMile), v => v * 1.48980762045546E-13},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.CubicPica), v => v * 21555072},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.GrossRegisteredTon), v => v * 3.34201388888889E-04},
            {Tuple.Create(VolumeUnit.Quart,VolumeUnit.MeasurementTon), v => v * 8.35503472222222E-04},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.Teaspoon), v => v * 230.582385696932},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.ModernTeaspoon), v => v * 227.3045},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.TableSpoon), v => v * 76.8607952323107},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.FluidOunce), v => v * 38.4303976161554},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.Cup), v => v * 4.80379970201942},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.USPint), v => v * 2.40189985100971},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.UKPint), v => v * 2},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.Quart), v => v * 1.20094992550486},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.ImperialQuart), v => v * 1},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.Gallon), v => v * 0.300237481376214},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.ImperialGallon), v => v * 0.25},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.Liter), v => v * 1.1365225},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicAngstrom), v => v * 1.1365225E+27},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.USOilBarrel), v => v * 7.14851146133842E-03},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.USBushel), v => v * 3.22517732340219E-02},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicFeet), v => v * 0.040135913308973},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicInch), v => v * 69.3548581979054},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicLightYear), v => v * 1.34215918540124E-51},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicMeter), v => v * 0.0011365225},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicMile), v => v * 2.72666248162019E-13},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicYard), v => v * 1.48651530773974E-03},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicNauticalMile), v => v * 1.78918435080255E-13},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.CubicPica), v => v * 25886562.1126518},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.GrossRegisteredTon), v => v * 4.0135913308973E-04},
            {Tuple.Create(VolumeUnit.ImperialQuart,VolumeUnit.MeasurementTon), v => v * 1.00339783272433E-03},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.Teaspoon), v => v * 768},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.ModernTeaspoon), v => v * 757.0823568},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.TableSpoon), v => v * 256},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.FluidOunce), v => v * 128},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.Cup), v => v * 16},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.USPint), v => v * 8},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.UKPint), v => v * 6.66139347703191},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.Quart), v => v * 4},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.ImperialQuart), v => v * 3.33069673851596},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.Gallon), v => v * 1},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.ImperialGallon), v => v * 0.832674184628989},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.Liter), v => v * 3.785411784},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicAngstrom), v => v * 3.785411784E+27},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.USOilBarrel), v => v * 2.38095238095238E-02},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.USBushel), v => v * 0.107420875921913},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicFeet), v => v * 0.133680555555556},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicInch), v => v * 231},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicLightYear), v => v * 4.47032522138515E-51},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicMeter), v => v * 0.003785411784},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicMile), v => v * 9.0816858345662E-13},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicYard), v => v * 4.9511316872428E-03},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicNauticalMile), v => v * 5.95923048182185E-13},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.CubicPica), v => v * 86220288},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.GrossRegisteredTon), v => v * 1.33680555555556E-03},
            {Tuple.Create(VolumeUnit.Gallon,VolumeUnit.MeasurementTon), v => v * 3.34201388888889E-03},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.Teaspoon), v => v * 922.329542787729},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.ModernTeaspoon), v => v * 909.218},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.TableSpoon), v => v * 307.443180929243},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.FluidOunce), v => v * 153.721590464621},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.Cup), v => v * 19.2151988080777},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.USPint), v => v * 9.60759940403884},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.UKPint), v => v * 8},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.Quart), v => v * 4.80379970201942},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.ImperialQuart), v => v * 4},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.Gallon), v => v * 1.20094992550486},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.ImperialGallon), v => v * 1},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.Liter), v => v * 4.54609},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicAngstrom), v => v * 4.54609E+27},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.USOilBarrel), v => v * 2.85940458453537E-02},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.USBushel), v => v * 0.129007092936088},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicFeet), v => v * 0.160543653235892},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicInch), v => v * 277.419432791621},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicLightYear), v => v * 5.36863674160497E-51},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicMeter), v => v * 0.00454609},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicMile), v => v * 1.09066499264808E-12},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicYard), v => v * 5.94606123095897E-03},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicNauticalMile), v => v * 7.15673740321021E-13},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.CubicPica), v => v * 103546248.450607},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.GrossRegisteredTon), v => v * 1.60543653235892E-03},
            {Tuple.Create(VolumeUnit.ImperialGallon,VolumeUnit.MeasurementTon), v => v * 4.0135913308973E-03},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.Teaspoon), v => v * 202.884136211058},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.ModernTeaspoon), v => v * 200},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.TableSpoon), v => v * 67.628045403686},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.FluidOunce), v => v * 33.814022701843},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.Cup), v => v * 4.22675283773038},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.USPint), v => v * 2.11337641886519},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.UKPint), v => v * 1.7597539863927},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.Quart), v => v * 1.05668820943259},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.ImperialQuart), v => v * 0.879876993196351},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.Gallon), v => v * 0.264172052358148},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.ImperialGallon), v => v * 0.219969248299088},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.Liter), v => v * 1},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicAngstrom), v => v * 1E+27},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.USOilBarrel), v => v * 6.28981077043211E-03},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.USBushel), v => v * 2.83775932584017E-02},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicFeet), v => v * 3.53146667214886E-02},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicInch), v => v * 61.0237440947323},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicLightYear), v => v * 1.18093498844171E-51},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicMeter), v => v * 0.001},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicMile), v => v * 2.39912758578928E-13},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicYard), v => v * 1.30795061931439E-03},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicNauticalMile), v => v * 1.57426214685811E-13},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.CubicPica), v => v * 22776990.4358706},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.GrossRegisteredTon), v => v * 3.53146667214886E-04},
            {Tuple.Create(VolumeUnit.Liter,VolumeUnit.MeasurementTon), v => v * 8.82866668037215E-04},

            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.Teaspoon), v => v * 2.02884136211058E-25},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.ModernTeaspoon), v => v * 2E-25},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.TableSpoon), v => v * 6.7628045403686E-26},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.FluidOunce), v => v * 3.3814022701843E-26},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.Cup), v => v * 4.22675283773037E-27},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.USPint), v => v * 2.11337641886519E-27},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.UKPint), v => v * 1.7597539863927E-27},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.Quart), v => v * 1.05668820943259E-27},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.ImperialQuart), v => v * 8.79876993196351E-28},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.Gallon), v => v * 2.64172052358148E-28},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.ImperialGallon), v => v * 2.19969248299088E-28},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.Liter), v => v * 1E-27},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicAngstrom), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.USOilBarrel), v => v * 6.28981077043211E-30},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.USBushel), v => v * 2.83775932584017E-29},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicFeet), v => v * 3.53146667214886E-29},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicInch), v => v * 6.10237440947323E-26},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicLightYear), v => v * 1.18093498844171E-78},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicMeter), v => v * 1E-30},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicMile), v => v * 2.39912758578928E-40},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicYard), v => v * 1.30795061931439E-30},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicNauticalMile), v => v * 1.57426214685811E-40},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.CubicPica), v => v * 2.27769904358706E-20},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.GrossRegisteredTon), v => v * 3.53146667214886E-31},
            {Tuple.Create(VolumeUnit.CubicAngstrom,VolumeUnit.MeasurementTon), v => v * 8.82866668037215E-31},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.Teaspoon), v => v * 32256},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.ModernTeaspoon), v => v * 31797.4589856},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.TableSpoon), v => v * 10752},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.FluidOunce), v => v * 5376},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.Cup), v => v * 672},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.USPint), v => v * 336},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.UKPint), v => v * 279.77852603534},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.Quart), v => v * 168},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.ImperialQuart), v => v * 139.88926301767},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.Gallon), v => v * 42},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.ImperialGallon), v => v * 34.9723157544175},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.Liter), v => v * 158.987294928},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicAngstrom), v => v * 1.58987294928E+29},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.USOilBarrel), v => v * 1},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.USBushel), v => v * 4.51167678872034},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicFeet), v => v * 5.61458333333333},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicInch), v => v * 9702},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicLightYear), v => v * 1.87753659298176E-49},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicMeter), v => v * 0.158987294928},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicMile), v => v * 3.8143080505178E-11},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicYard), v => v * 0.207947530864198},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicNauticalMile), v => v * 2.50287680236518E-11},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.CubicPica), v => v * 3621252096},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.GrossRegisteredTon), v => v * 5.61458333333333E-02},
            {Tuple.Create(VolumeUnit.USOilBarrel,VolumeUnit.MeasurementTon), v => v * 0.140364583333333},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.Teaspoon), v => v * 7149.44831168831},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.ModernTeaspoon), v => v * 7047.814033376},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.TableSpoon), v => v * 2383.14943722944},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.FluidOunce), v => v * 1191.57471861472},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.Cup), v => v * 148.94683982684},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.USPint), v => v * 74.4734199134199},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.UKPint), v => v * 62.0120942029392},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.Quart), v => v * 37.23670995671},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.ImperialQuart), v => v * 31.0060471014696},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.Gallon), v => v * 9.30917748917749},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.ImperialGallon), v => v * 7.7515117753674},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.Liter), v => v * 35.23907016688},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicAngstrom), v => v * 3.523907016688E+28},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.USOilBarrel), v => v * 0.221647083075654},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.USBushel), v => v * 1},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicFeet), v => v * 1.24445601851852},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicInch), v => v * 2150.42},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicLightYear), v => v * 4.1615050920221E-50},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicMeter), v => v * 0.03523907016688},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicMile), v => v * 8.45430253349257E-12},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicYard), v => v * 0.046090963648834},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicNauticalMile), v => v * 5.54755342541963E-12},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.CubicPica), v => v * 802639964.16},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.GrossRegisteredTon), v => v * 1.24445601851852E-02},
            {Tuple.Create(VolumeUnit.USBushel,VolumeUnit.MeasurementTon), v => v * 0.031111400462963},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.Teaspoon), v => v * 5745.03896103896},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.ModernTeaspoon), v => v * 5663.3693184},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.TableSpoon), v => v * 1915.01298701299},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.FluidOunce), v => v * 957.506493506494},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.Cup), v => v * 119.688311688312},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.USPint), v => v * 59.8441558441559},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.UKPint), v => v * 49.8306836723426},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.Quart), v => v * 29.9220779220779},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.ImperialQuart), v => v * 24.9153418361713},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.Gallon), v => v * 7.48051948051948},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.ImperialGallon), v => v * 6.22883545904283},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.Liter), v => v * 28.316846592},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicAngstrom), v => v * 2.8316846592E+28},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.USOilBarrel), v => v * 0.178107606679035},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.USBushel), v => v * 0.803563954948336},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicFeet), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicInch), v => v * 1728},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicLightYear), v => v * 3.34403549028292E-50},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicMeter), v => v * 0.028316846592},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicMile), v => v * 6.79357278014303E-12},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicYard), v => v * 0.037037037037037},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicNauticalMile), v => v * 4.45781397081738E-12},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.CubicPica), v => v * 644972544},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.GrossRegisteredTon), v => v * 0.01},
            {Tuple.Create(VolumeUnit.CubicFeet,VolumeUnit.MeasurementTon), v => v * 0.025},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.Teaspoon), v => v * 3.32467532467532},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.ModernTeaspoon), v => v * 3.2774128},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.TableSpoon), v => v * 1.10822510822511},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.FluidOunce), v => v * 0.554112554112554},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.Cup), v => v * 6.92640692640693E-02},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.USPint), v => v * 3.46320346320346E-02},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.UKPint), v => v * 2.88372011992723E-02},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.Quart), v => v * 1.73160173160173E-02},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.ImperialQuart), v => v * 1.44186005996362E-02},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.Gallon), v => v * 4.32900432900433E-03},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.ImperialGallon), v => v * 3.60465014990904E-03},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.Liter), v => v * 0.016387064},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicAngstrom), v => v * 1.6387064E+25},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.USOilBarrel), v => v * 1.0307153164296E-04},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.USBushel), v => v * 4.65025436891398E-04},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicFeet), v => v * 5.78703703703704E-04},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicInch), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicLightYear), v => v * 1.93520572354335E-53},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicMeter), v => v * 0.000016387064},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicMile), v => v * 3.93146572924944E-15},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicYard), v => v * 2.14334705075446E-05},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicNauticalMile), v => v * 2.57975345533413E-15},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.CubicPica), v => v * 373248},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.GrossRegisteredTon), v => v * 5.78703703703704E-06},
            {Tuple.Create(VolumeUnit.CubicInch,VolumeUnit.MeasurementTon), v => v * 1.44675925925926E-05},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.Teaspoon), v => v * 1.71799581007225E+53},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.ModernTeaspoon), v => v * 1.69357332924743E+53},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.TableSpoon), v => v * 5.72665270024084E+52},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.FluidOunce), v => v * 2.86332635012042E+52},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.Cup), v => v * 3.57915793765053E+51},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.USPint), v => v * 1.78957896882526E+51},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.UKPint), v => v * 1.49013620869576E+51},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.Quart), v => v * 8.94789484412632E+50},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.ImperialQuart), v => v * 7.45068104347882E+50},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.Gallon), v => v * 2.23697371103158E+50},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.ImperialGallon), v => v * 1.8626702608697E+50},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.Liter), v => v * 8.46786664623715E+50},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicAngstrom), v => v * 8.46786664623715E+77},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.USOilBarrel), v => v * 5.32612788340852E+48},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.USBushel), v => v * 2.40297675453304E+49},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicFeet), v => v * 2.99039888453874E+49},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicInch), v => v * 5.16740927248295E+52},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicLightYear), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicMeter), v => v * 8.46786664623715E+47},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicMile), v => v * 2.03154924637725E+38},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicYard), v => v * 1.10755514242176E+48},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicNauticalMile), v => v * 1.33306419258135E+38},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.CubicPica), v => v * 1.92872517613572E+58},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.GrossRegisteredTon), v => v * 2.99039888453874E+47},
            {Tuple.Create(VolumeUnit.CubicLightYear,VolumeUnit.MeasurementTon), v => v * 7.47599721134686E+47},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.Teaspoon), v => v * 202884.136211058},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.ModernTeaspoon), v => v * 200000},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.TableSpoon), v => v * 67628.045403686},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.FluidOunce), v => v * 33814.022701843},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.Cup), v => v * 4226.75283773038},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.USPint), v => v * 2113.37641886519},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.UKPint), v => v * 1759.7539863927},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.Quart), v => v * 1056.68820943259},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.ImperialQuart), v => v * 879.876993196351},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.Gallon), v => v * 264.172052358148},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.ImperialGallon), v => v * 219.969248299088},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.Liter), v => v * 1000},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicAngstrom), v => v * 1E+30},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.USOilBarrel), v => v * 6.2898107704321},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.USBushel), v => v * 28.3775932584017},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicFeet), v => v * 35.3146667214886},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicInch), v => v * 61023.7440947323},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicLightYear), v => v * 1.18093498844171E-48},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicMeter), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicMile), v => v * 2.39912758578928E-10},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicYard), v => v * 1.30795061931439},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicNauticalMile), v => v * 1.57426214685811E-10},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.CubicPica), v => v * 22776990435.8706},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.GrossRegisteredTon), v => v * 0.353146667214886},
            {Tuple.Create(VolumeUnit.CubicMeter,VolumeUnit.MeasurementTon), v => v * 0.882866668037215},

            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.Teaspoon), v => v * 845657969225143},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.ModernTeaspoon), v => v * 833636365088116},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.TableSpoon), v => v * 281885989741714},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.FluidOunce), v => v * 140942994870857},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.Cup), v => v * 17617874358857.1},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.USPint), v => v * 8808937179428.57},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.UKPint), v => v * 7334974583328.67},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.Quart), v => v * 4404468589714.29},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.ImperialQuart), v => v * 3667487291664.34},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.Gallon), v => v * 1101117147428.57},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.ImperialGallon), v => v * 916871822916.084},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.Liter), v => v * 4168181825440.58},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicAngstrom), v => v * 4.16818182544058E+39},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.USOilBarrel), v => v * 26217074938.7755},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.USBushel), v => v * 118282968469.415},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicFeet), v => v * 147197952000},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicInch), v => v * 254358061056000},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicLightYear), v => v * 4.92235175584961E-39},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicMeter), v => v * 4168181825.44058},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicMile), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicYard), v => v * 5451776000},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicNauticalMile), v => v * 0.656181086901306},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.CubicPica), v => v * 9.49386375730299E+19},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.GrossRegisteredTon), v => v * 1471979520},
            {Tuple.Create(VolumeUnit.CubicMile,VolumeUnit.MeasurementTon), v => v * 3679948800},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.Teaspoon), v => v * 155116.051948052},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.ModernTeaspoon), v => v * 152910.9715968},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.TableSpoon), v => v * 51705.3506493507},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.FluidOunce), v => v * 25852.6753246753},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.Cup), v => v * 3231.58441558442},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.USPint), v => v * 1615.79220779221},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.UKPint), v => v * 1345.42845915325},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.Quart), v => v * 807.896103896104},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.ImperialQuart), v => v * 672.714229576625},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.Gallon), v => v * 201.974025974026},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.ImperialGallon), v => v * 168.178557394156},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.Liter), v => v * 764.554857984},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicAngstrom), v => v * 7.64554857984E+29},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.USOilBarrel), v => v * 4.80890538033395},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.USBushel), v => v * 21.6962267836051},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicFeet), v => v * 27},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicInch), v => v * 46656},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicLightYear), v => v * 9.02889582376387E-49},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicMeter), v => v * 0.764554857984},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicMile), v => v * 1.83426465063862E-10},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicYard), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicNauticalMile), v => v * 1.20360977212069E-10},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.CubicPica), v => v * 17414258688},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.GrossRegisteredTon), v => v * 0.27},
            {Tuple.Create(VolumeUnit.CubicYard,VolumeUnit.MeasurementTon), v => v * 0.675},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.Teaspoon), v => v * 1.28875700032533E+15},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.ModernTeaspoon), v => v * 1.2704364416E+15},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.TableSpoon), v => v * 429585666775110},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.FluidOunce), v => v * 214792833387555},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.Cup), v => v * 26849104173444.4},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.USPint), v => v * 13424552086722.2},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.UKPint), v => v * 11178277962820.8},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.Quart), v => v * 6712276043361.1},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.ImperialQuart), v => v * 5589138981410.4},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.Gallon), v => v * 1678069010840.27},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.ImperialGallon), v => v * 1397284745352.6},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.Liter), v => v * 6352182208000},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicAngstrom), v => v * 6.352182208E+39},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.USOilBarrel), v => v * 39954024067.6256},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.USBushel), v => v * 180259643001.88},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicFeet), v => v * 224325197629.69},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicInch), v => v * 387633941504104},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicLightYear), v => v * 7.50151422238411E-39},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicMeter), v => v * 6352182208},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicMile), v => v * 1.52396955651726},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicYard), v => v * 8308340652.95146},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicNauticalMile), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.CubicPica), v => v * 1.44683593398524E+20},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.GrossRegisteredTon), v => v * 2243251976.2969},
            {Tuple.Create(VolumeUnit.CubicNauticalMile,VolumeUnit.MeasurementTon), v => v * 5608129940.74224},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.Teaspoon), v => v * 8.90741631482372E-06},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.ModernTeaspoon), v => v * 8.78079132373114E-06},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.TableSpoon), v => v * 2.96913877160791E-06},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.FluidOunce), v => v * 1.48456938580395E-06},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.Cup), v => v * 1.85571173225494E-07},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.USPint), v => v * 9.27855866127471E-08},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.UKPint), v => v * 7.72601626780916E-08},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.Quart), v => v * 4.63927933063736E-08},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.ImperialQuart), v => v * 3.86300813390458E-08},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.Gallon), v => v * 1.15981983265934E-08},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.ImperialGallon), v => v * 9.65752033476145E-09},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.Liter), v => v * 4.39039566186557E-08},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicAngstrom), v => v * 4.39039566186557E+19},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.USOilBarrel), v => v * 2.76147579204605E-10},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.USBushel), v => v * 1.24588862335873E-09},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicFeet), v => v * 1.55045359574252E-09},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicInch), v => v * 2.67918381344307E-06},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicLightYear), v => v * 5.18477185019974E-59},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicMeter), v => v * 4.39039566186557E-11},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicMile), v => v * 1.05331193449113E-20},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicYard), v => v * 5.74242072497229E-11},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicNauticalMile), v => v * 6.91163370020505E-21},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.CubicPica), v => v * 1},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.GrossRegisteredTon), v => v * 1.55045359574252E-11},
            {Tuple.Create(VolumeUnit.CubicPica,VolumeUnit.MeasurementTon), v => v * 3.8761339893563E-11},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.Teaspoon), v => v * 574503.896103896},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.ModernTeaspoon), v => v * 566336.93184},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.TableSpoon), v => v * 191501.298701299},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.FluidOunce), v => v * 95750.6493506494},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.Cup), v => v * 11968.8311688312},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.USPint), v => v * 5984.41558441558},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.UKPint), v => v * 4983.06836723426},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.Quart), v => v * 2992.20779220779},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.ImperialQuart), v => v * 2491.53418361713},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.Gallon), v => v * 748.051948051948},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.ImperialGallon), v => v * 622.883545904283},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.Liter), v => v * 2831.6846592},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicAngstrom), v => v * 2.8316846592E+30},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.USOilBarrel), v => v * 17.8107606679035},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.USBushel), v => v * 80.3563954948336},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicFeet), v => v * 100},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicInch), v => v * 172800},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicLightYear), v => v * 3.34403549028292E-48},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicMeter), v => v * 2.8316846592},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicMile), v => v * 6.79357278014303E-10},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicYard), v => v * 3.7037037037037},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicNauticalMile), v => v * 4.45781397081738E-10},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.CubicPica), v => v * 64497254400},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.GrossRegisteredTon), v => v * 1},
            {Tuple.Create(VolumeUnit.GrossRegisteredTon,VolumeUnit.MeasurementTon), v => v * 2.5},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.Teaspoon), v => v * 229801.558441558},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.ModernTeaspoon), v => v * 226534.772736},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.TableSpoon), v => v * 76600.5194805195},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.FluidOunce), v => v * 38300.2597402597},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.Cup), v => v * 4787.53246753247},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.USPint), v => v * 2393.76623376623},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.UKPint), v => v * 1993.2273468937},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.Quart), v => v * 1196.88311688312},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.ImperialQuart), v => v * 996.613673446852},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.Gallon), v => v * 299.220779220779},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.ImperialGallon), v => v * 249.153418361713},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.Liter), v => v * 1132.67386368},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicAngstrom), v => v * 1.13267386368E+30},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.USOilBarrel), v => v * 7.12430426716141},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.USBushel), v => v * 32.1425581979334},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicFeet), v => v * 40},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicInch), v => v * 69120},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicLightYear), v => v * 1.33761419611317E-48},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicMeter), v => v * 1.13267386368},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicMile), v => v * 2.71742911205721E-10},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicYard), v => v * 1.48148148148148},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicNauticalMile), v => v * 1.78312558832695E-10},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.CubicPica), v => v * 25798901760},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.GrossRegisteredTon), v => v * 0.4},
            {Tuple.Create(VolumeUnit.MeasurementTon,VolumeUnit.MeasurementTon), v => v * 1},

            };
        }
        public static double Convert(double number, VolumeUnit from_unit, VolumeUnit to_unit)
        {
            return from_unit == to_unit ? number : Lookup[Tuple.Create(from_unit, to_unit)](number);
        }
    }

}